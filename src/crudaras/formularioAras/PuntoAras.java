
package crudaras.formularioAras;


import static com.itextpdf.text.Annotation.URL;
import static com.itextpdf.text.pdf.PdfName.URL;
import static com.lowagie.text.Annotation.URL;
import static com.sun.javafx.css.FontFace.FontFaceSrcType.URL;
import crudaras.Conect;
import java.awt.Component;
import java.io.InputStream;
import java.math.BigInteger;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSlider;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

import java.util.*;
import net.sf.jasperreports.engine.JasperPrintManager;

public class PuntoAras extends javax.swing.JFrame {
Conect conexFor = new Conect();
    Connection con=conexFor.conexion();
    DefaultTableModel mida;
    DefaultTableModel midas;
    DefaultTableModel midas1;
   
    public PuntoAras() {
        
        initComponents();
         mida=(DefaultTableModel)Jaras.getModel();
         midas=(DefaultTableModel)JarasTab2.getModel();
         midas1=(DefaultTableModel)JarasTab3.getModel();
        
        this.setLocationRelativeTo(null);
        MostrarDatos();
       (jTEXTbusquedaTab2).requestFocus();
        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
       int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
//        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jnombre = new javax.swing.JTextField();
        jtamanio = new javax.swing.JTextField();
        jprecio = new javax.swing.JTextField();
        jpresentacion1 = new javax.swing.JTextField();
        jCanti = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnvender = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Jaras = new javax.swing.JTable();
        JTTotal = new javax.swing.JTextField();
        jTEXTbusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAras = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        btnagregar = new javax.swing.JButton();
        tab1canti = new javax.swing.JComboBox<>();
        BtnQuitar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Jcodigo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ganar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        VENTAS = new java.awt.Label();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableArasTab2 = new javax.swing.JTable();
        jTEXTbusquedaTab2 = new javax.swing.JTextField();
        btna単adir = new javax.swing.JButton();
        tab2canti = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        JarasTab2 = new javax.swing.JTable();
        JTTotal1 = new javax.swing.JTextField();
        tab2Vender = new javax.swing.JButton();
        tab2Quitar = new javax.swing.JButton();
        tab2imprimir = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jtextventas2 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableArasTab3 = new javax.swing.JTable();
        tab2canti1 = new javax.swing.JComboBox<>();
        btna単adir1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        JarasTab3 = new javax.swing.JTable();
        tab2Vender1 = new javax.swing.JButton();
        tab2imprimir1 = new javax.swing.JButton();
        JTTotal2 = new javax.swing.JTextField();
        tab2Quitar1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        informes = new javax.swing.JTable();
        ventasDia = new javax.swing.JButton();
        inventario = new javax.swing.JButton();
        sumaDeVentas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        gananciasDia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnganar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jnombreActionPerformed(evt);
            }
        });

        jtamanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtamanioActionPerformed(evt);
            }
        });

        jCanti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", " ", " ", " " }));
        jCanti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCantiActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Tama単o");

        jLabel3.setText("presentacion");

        jLabel5.setText("precio");

        jLabel6.setText("Cantidad");

        jButton1.setText("nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Actualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnvender.setText("Vender");
        btnvender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvenderActionPerformed(evt);
            }
        });

        Jaras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nombre", "tama単o", "presentacion", "precio", "cantidad", "Id", "CantiProducts", "Suma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Jaras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JarasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Jaras);

        JTTotal.setEditable(false);
        JTTotal.setBackground(new java.awt.Color(0, 0, 0));
        JTTotal.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        JTTotal.setForeground(new java.awt.Color(0, 204, 0));
        JTTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTTotalActionPerformed(evt);
            }
        });

        jTEXTbusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTEXTbusquedaActionPerformed(evt);
            }
        });
        jTEXTbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTEXTbusquedaKeyReleased(evt);
            }
        });

        jTableAras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nombre", "tama単o", "presentacion", "precio", "Title 5", "Title 6", "Title 7"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableArasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAras);

        jButton5.setText("Imprimir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnagregar.setMnemonic('1');
        btnagregar.setText("agregar");
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });

        tab1canti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        tab1canti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1cantiActionPerformed(evt);
            }
        });

        BtnQuitar.setText("Quitar");
        BtnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnQuitarActionPerformed(evt);
            }
        });

        jLabel4.setText("Codigo");

        Jcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcodigoActionPerformed(evt);
            }
        });

        jLabel8.setText("Ganancias");

        ganar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ganarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(btnvender)
                        .addGap(18, 18, 18)
                        .addComponent(BtnQuitar)
                        .addGap(170, 170, 170)
                        .addComponent(JTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jtamanio, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel3)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel2)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel1))))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel6)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jpresentacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addComponent(jprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jCanti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(Jcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(ganar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 113, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTEXTbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnagregar)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(tab1canti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4)
                                .addGap(30, 30, 30)
                                .addComponent(jButton2)
                                .addGap(102, 102, 102)
                                .addComponent(jButton5)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(tab1canti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnagregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Jcodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jtamanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnvender)
                            .addComponent(BtnQuitar))
                        .addGap(44, 44, 44)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jpresentacion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTEXTbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCanti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(ganar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(83, 83, 83))
        );

        jTabbedPane1.addTab("Productos", jPanel1);

        VENTAS.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        VENTAS.setText("VENTAS");

        jTableArasTab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tama単o", "Presentacion", "Id_Pro", "Title 5", "Title 6", "Title 7"
            }
        ));
        jTableArasTab2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTableArasTab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableArasTab2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableArasTab2);

        jTEXTbusquedaTab2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTEXTbusquedaTab2ActionPerformed(evt);
            }
        });
        jTEXTbusquedaTab2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTEXTbusquedaTab2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTEXTbusquedaTab2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTEXTbusquedaTab2KeyTyped(evt);
            }
        });

        btna単adir.setMnemonic('k');
        btna単adir.setText("a単adir");
        btna単adir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btna単adirActionPerformed(evt);
            }
        });

        tab2canti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        JarasTab2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JarasTab2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Tama単o", "Presentacion", "Precio Unitario", "Stock", "Cantidad", "Total"
            }
        ));
        JarasTab2.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                JarasTab2ComponentAdded(evt);
            }
        });
        jScrollPane4.setViewportView(JarasTab2);

        JTTotal1.setEditable(false);
        JTTotal1.setBackground(new java.awt.Color(0, 0, 0));
        JTTotal1.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        JTTotal1.setForeground(new java.awt.Color(0, 204, 0));
        JTTotal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTTotal1ActionPerformed(evt);
            }
        });

        tab2Vender.setText("Vender");
        tab2Vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2VenderActionPerformed(evt);
            }
        });

        tab2Quitar.setText("Quitar");
        tab2Quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2QuitarActionPerformed(evt);
            }
        });

        tab2imprimir.setText("Imprimir");
        tab2imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2imprimirActionPerformed(evt);
            }
        });

        jButton6.setText("Limpiar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jtextventas2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtextventas2KeyReleased(evt);
            }
        });

        jTableArasTab3.setBackground(new java.awt.Color(0, 204, 204));
        jTableArasTab3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tama単o", "Presentacion", "Id_Pro", "Title 5", "Title 6", "Title 7"
            }
        ));
        jTableArasTab3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTableArasTab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableArasTab3MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTableArasTab3);

        tab2canti1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        btna単adir1.setMnemonic('k');
        btna単adir1.setText("a単adir");
        btna単adir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btna単adir1ActionPerformed(evt);
            }
        });

        JarasTab3.setBackground(new java.awt.Color(51, 255, 204));
        JarasTab3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JarasTab3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Tama単o", "Presentacion", "Precio Unitario", "Stock", "Cantidad", "Total"
            }
        ));
        JarasTab3.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                JarasTab3ComponentAdded(evt);
            }
        });
        jScrollPane7.setViewportView(JarasTab3);

        tab2Vender1.setText("Vender");
        tab2Vender1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2Vender1ActionPerformed(evt);
            }
        });

        tab2imprimir1.setText("Imprimir");
        tab2imprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2imprimir1ActionPerformed(evt);
            }
        });

        JTTotal2.setEditable(false);
        JTTotal2.setBackground(new java.awt.Color(0, 0, 0));
        JTTotal2.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        JTTotal2.setForeground(new java.awt.Color(0, 204, 0));
        JTTotal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTTotal2ActionPerformed(evt);
            }
        });

        tab2Quitar1.setText("Quitar");
        tab2Quitar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2Quitar1ActionPerformed(evt);
            }
        });

        jButton7.setText("Limpiar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(97, 97, 97)
                            .addComponent(tab2Vender)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tab2imprimir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JTTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(290, 290, 290))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(342, 342, 342)
                                    .addComponent(VENTAS, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addComponent(jTEXTbusquedaTab2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtextventas2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btna単adir)
                                    .addComponent(tab2canti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tab2canti1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tab2Quitar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btna単adir1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tab2Quitar)
                                    .addComponent(jButton6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(tab2Vender1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tab2imprimir1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(JTTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(VENTAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jTEXTbusquedaTab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtextventas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(tab2canti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btna単adir))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tab2canti1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btna単adir1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tab2Quitar1))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(JTTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(tab2Vender1)
                                                .addComponent(tab2imprimir1)
                                                .addComponent(jButton7))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(JTTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tab2Vender)
                                            .addComponent(tab2imprimir)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(tab2Quitar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        VENTAS.getAccessibleContext().setAccessibleName("VENTAS\n");

        jTabbedPane1.addTab("Ventas", jPanel2);

        informes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(informes);

        ventasDia.setText("ventas del dia");
        ventasDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventasDiaActionPerformed(evt);
            }
        });

        inventario.setText("inventario");
        inventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventarioActionPerformed(evt);
            }
        });

        sumaDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumaDeVentasActionPerformed(evt);
            }
        });

        jLabel7.setText("Total de venta");

        gananciasDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gananciasDiaActionPerformed(evt);
            }
        });

        jLabel9.setText("Ganancias del Dia");

        btnganar.setText("ganancias");
        btnganar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnganarActionPerformed(evt);
            }
        });

        btneliminar.setText("reiniciar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btneliminar)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ventasDia)
                                .addGap(56, 56, 56)
                                .addComponent(inventario)
                                .addGap(39, 39, 39)
                                .addComponent(btnganar)
                                .addGap(57, 57, 57)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sumaDeVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(gananciasDia, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ventasDia)
                            .addComponent(inventario)
                            .addComponent(btnganar)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gananciasDia)
                            .addComponent(sumaDeVentas, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))))
                .addGap(16, 16, 16)
                .addComponent(btneliminar)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Inventario", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtamanioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtamanioActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
ActualizarDatos();
limpiarCajas();
MostrarDatos();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jnombreActionPerformed

    private void jCantiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCantiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCantiActionPerformed

    private void jTEXTbusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTEXTbusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
InsertDatos();
limpiarCajas();
MostrarDatos();
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTableArasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArasMouseClicked
int seleccopn = jTableAras.rowAtPoint(evt.getPoint());
Jcodigo.setText(jTableAras.getValueAt(seleccopn, 0).toString());
jnombre.setText(jTableAras.getValueAt(seleccopn, 1).toString());
jtamanio.setText(jTableAras.getValueAt(seleccopn, 2).toString());
jpresentacion1.setText(jTableAras.getValueAt(seleccopn, 3).toString());
jprecio.setText(jTableAras.getValueAt(seleccopn, 4).toString());

jCanti.setSelectedItem(jTableAras.getValueAt(seleccopn, 5));
        try {
            ganar.setText(jTableAras.getValueAt(seleccopn, 6).toString());
        } catch (NullPointerException e) {
        }

//mostrarVenta();
        
// TODO add your handling code here:
    }//GEN-LAST:event_jTableArasMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
EliminarDtos();
MostrarDatos();


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTEXTbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEXTbusquedaKeyReleased

        filtrarDtos(jTEXTbusqueda.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        try {
           
             InputStream archivo= getClass().getResourceAsStream("/reportes/notas.jrxml");
             JasperDesign notabogas=JRXmlLoader.load(archivo);
             JasperReport jr= JasperCompileManager.compileReport(notabogas);
             JasperPrint jp=JasperFillManager.fillReport(jr, null, con);
             JasperViewer.viewReport(jp);
        } catch (Exception e) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void JarasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JarasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JarasMouseClicked

    private void btnvenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvenderActionPerformed
//JTTotal.setText(Double.toString((double) calcularTotal()));

        // TODO add your handling code here:
    }//GEN-LAST:event_btnvenderActionPerformed

    private void JTTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTTotalActionPerformed

    private void jTEXTbusquedaTab2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEXTbusquedaTab2KeyReleased
        
        try {
            
           //filtra dependiendo del nomlbre del producto 
            filtrarVenta(jTEXTbusquedaTab2.getText());
            //aqui filtra los productos por el id 
        String maincra = jTEXTbusquedaTab2.getText();
        //creamos una instancia de biginteger por que es muy grande algunos numero y le paso lo que aparezca en nuestro jtxt
        BigInteger bisno = new BigInteger(maincra);
        //aqui es donde agrega a la tabla si conside con algun producto regsitrado por el id
            mostrarVentaScanner(bisno);
       //es es el boton qeu lleva la cuenta 
       
        JTTotal1.setText(Double.toString((double) calcularTotalUno()));
        //selecciona el primer numero del combo box
        tab2canti.setSelectedIndex(0);
        } catch (Exception e) {
        }
             limpiarCajas();
        
//ScanerTelefono(Integer.parseInt(jTEXTbusquedaTab2.getText()));
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaTab2KeyReleased

    private void jTableArasTab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArasTab2MouseClicked
//int seleccopn = jTableArasTab2.rowAtPoint(evt.getPoint());
//jnombre.setText(jTableArasTab2.getValueAt(seleccopn, 0).toString());
//jtamanio.setText(jTableArasTab2.getValueAt(seleccopn, 1).toString());
//jpresentacion1.setText(jTableArasTab2.getValueAt(seleccopn, 2).toString());
//jprecio.setText(jTableArasTab2.getValueAt(seleccopn, 3).toString());
//
//jCanti.setSelectedItem(jTableArasTab2.getValueAt(seleccopn, 4));
JTTotal1.setText(Double.toString((double) calcularTotalUno()));
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableArasTab2MouseClicked

    private void btna単adirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btna単adirActionPerformed

     
        
        mostrarVentaUno((String)tab2canti.getSelectedItem());
        // TODO add your handling code here:
        JTTotal1.setText(Double.toString((double) calcularTotalUno()));
        
          jTEXTbusquedaTab2.setText("");
          tab2canti.setSelectedIndex(0);
          jTEXTbusquedaTab2.requestFocus();
        
    }//GEN-LAST:event_btna単adirActionPerformed

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed
mostrarVenta((String)tab1canti.getSelectedItem());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnagregarActionPerformed

    private void tab1cantiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1cantiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tab1cantiActionPerformed

    private void BtnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnQuitarActionPerformed
EliminarRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnQuitarActionPerformed

    private void jTEXTbusquedaTab2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTEXTbusquedaTab2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaTab2ActionPerformed

    private void JTTotal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTTotal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTTotal1ActionPerformed

    private void tab2imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2imprimirActionPerformed
lista lis;
           List <lista> listin = new ArrayList<>();
  for(int i=0; i < JarasTab2.getRowCount();i++){
      
     
      

       lis = new lista(JarasTab2.getValueAt(i, 1).toString(),JarasTab2.getValueAt(i, 2).toString(), JarasTab2.getValueAt(i, 3).toString(), JarasTab2.getValueAt(i, 4).toString(), JarasTab2.getValueAt(i, 6).toString(), JarasTab2.getValueAt(i, 7).toString());
  listin.add(lis);

  }
            
    try {

//reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
      
InputStream archivo= getClass().getResourceAsStream("/maincra/ticket.jasper");
JasperReport reporte = (JasperReport) JRLoader.loadObject(archivo);
  

Map param1 = new HashMap();
      
      
      
    
//for(int i=0; i<JarasTab2.getRowCount();i++){
//String [] columnas= {"producto","tama単o"};
//       param1.put(columnas[0], JarasTab2.getValueAt(i, 1));
//       param1.put(columnas[1], JarasTab2.getValueAt(i, 2));
//       param1.put("presentacion", JarasTab2.getValueAt(i, 3));
//       param1.put("precioUnitario", JarasTab2.getValueAt(i, 4));
//       param1.put("cantidad", JarasTab2.getValueAt(i, 6));
//       param1.put("total", JarasTab2.getValueAt(i, 7));
       param1.put("Total", JTTotal1.getText());
        JasperPrint jprint= JasperFillManager.fillReport(reporte, param1, new JRBeanCollectionDataSource(listin));
       
//         
//        
//
//      
//   }
      JasperPrintManager.printReport(jprint, false);
//  JasperViewer viewer= new JasperViewer(jprint, false);
////       JasperViewer.viewReport(jprint);
//      viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//       viewer.setVisible(true);
//       
    } catch (JRException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
             
    try {
        ProcedimientoAlmacenado();
    } catch (SQLException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
  jTEXTbusquedaTab2.requestFocus();
    }//GEN-LAST:event_tab2imprimirActionPerformed

    private void tab2QuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2QuitarActionPerformed
EliminarRowUno();
JTTotal1.setText(Double.toString((double) calcularTotalUno()));
  jTEXTbusquedaTab2.requestFocus();
       
    }//GEN-LAST:event_tab2QuitarActionPerformed

    private void tab2VenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2VenderActionPerformed
JTTotal1.setText(Double.toString((double) calcularTotalUno()));
    try {
        ProcedimientoAlmacenado();
    } catch (SQLException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    limpiarFormulario(this.getContentPane().getComponents());
    eliminar();
    JTTotal1.setText(Double.toString((double) calcularTotalUno()));
    jTEXTbusquedaTab2.requestFocus();
    }//GEN-LAST:event_tab2VenderActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
limpiarFormulario(this.getContentPane().getComponents());
eliminar();
JTTotal1.setText(Double.toString((double) calcularTotalUno()));
  jTEXTbusquedaTab2.requestFocus();
        // TODO add your handling code here:
System.out.println(JarasTab2.getRowCount());
//        try {
//            if(JarasTab2.getRowCount()==0){
//        System.out.println("que Hay en la posicion 0 cuando esta vacia la tabla: ");
//}else{
//    System.out.println("si hay algo en la caja");
//}
//        } catch (Exception e) {
//        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
limpiarFormulario(this.getContentPane().getComponents());
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JarasTab2ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_JarasTab2ComponentAdded

        // TODO add your handling code here:
    }//GEN-LAST:event_JarasTab2ComponentAdded

    private void ventasDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventasDiaActionPerformed
        // TODO add your handling code here:
        
        ventasDeldia();
        sumaDeVentas.setText(Double.toString((double) calcularTotalVentasdeldia()));
        
        
    }//GEN-LAST:event_ventasDiaActionPerformed

    private void inventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventarioActionPerformed
        // TODO add your handling code here:
        inventario();
    }//GEN-LAST:event_inventarioActionPerformed

    private void jTableArasTab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArasTab3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableArasTab3MouseClicked

    private void btna単adir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btna単adir1ActionPerformed
mostrarVentaDos((String)tab2canti1.getSelectedItem());
        // TODO add your handling code here:
        JTTotal2.setText(Double.toString((double) calcularTotalDos()));
          jtextventas2.requestFocus();
         jTEXTbusquedaTab2.setText("");
          tab2canti.setSelectedIndex(0);
          
 jtextventas2.setText("");
          tab2canti1.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_btna単adir1ActionPerformed

    private void JarasTab3ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_JarasTab3ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_JarasTab3ComponentAdded

    private void tab2Vender1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2Vender1ActionPerformed

      JTTotal2.setText(Double.toString((double) calcularTotalDos()));
    try {
        ProcedimientoAlmacenado1();
    } catch (SQLException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    limpiarFormulario(this.getContentPane().getComponents());
    eliminars();
    JTTotal2.setText(Double.toString((double) calcularTotalDos()));
    jtextventas2.requestFocus();
    }//GEN-LAST:event_tab2Vender1ActionPerformed

    private void tab2imprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2imprimir1ActionPerformed
      lista lis;
           List <lista> listin = new ArrayList<>();
  for(int i=0; i < JarasTab3.getRowCount();i++){
      
     
      

       lis = new lista(JarasTab3.getValueAt(i, 1).toString(),JarasTab3.getValueAt(i, 2).toString(), JarasTab3.getValueAt(i, 3).toString(), JarasTab3.getValueAt(i, 4).toString(), JarasTab3.getValueAt(i, 6).toString(), JarasTab3.getValueAt(i, 7).toString());
  listin.add(lis);

  }
            
    try {

//reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
      
InputStream archivo= getClass().getResourceAsStream("/maincra/ticket.jasper");
JasperReport reporte = (JasperReport) JRLoader.loadObject(archivo);
  

Map param1 = new HashMap();
      
      
      
    
//for(int i=0; i<JarasTab2.getRowCount();i++){
//String [] columnas= {"producto","tama単o"};
//       param1.put(columnas[0], JarasTab2.getValueAt(i, 1));
//       param1.put(columnas[1], JarasTab2.getValueAt(i, 2));
//       param1.put("presentacion", JarasTab2.getValueAt(i, 3));
//       param1.put("precioUnitario", JarasTab2.getValueAt(i, 4));
//       param1.put("cantidad", JarasTab2.getValueAt(i, 6));
//       param1.put("total", JarasTab2.getValueAt(i, 7));
       param1.put("Total", JTTotal2.getText());
        JasperPrint jprint= JasperFillManager.fillReport(reporte, param1, new JRBeanCollectionDataSource(listin));
       
//         
//        
//
//      
//   }
     JasperPrintManager.printReport(jprint, false); 
//  JasperViewer viewer= new JasperViewer(jprint, false);
////       JasperViewer.viewReport(jprint);
//      viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//       viewer.setVisible(true);
       
    } catch (JRException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
             
    try {
        ProcedimientoAlmacenado1();
    } catch (SQLException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
  jtextventas2.requestFocus();
    }//GEN-LAST:event_tab2imprimir1ActionPerformed

    private void JTTotal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTTotal2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTTotal2ActionPerformed

    private void tab2Quitar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2Quitar1ActionPerformed
   EliminarRowDos();
JTTotal2.setText(Double.toString((double) calcularTotalDos()));
  jtextventas2.requestFocus();
       
    }//GEN-LAST:event_tab2Quitar1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
limpiarFormulario(this.getContentPane().getComponents());
eliminars();
JTTotal2.setText(Double.toString((double) calcularTotalDos()));
  jtextventas2.requestFocus();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jtextventas2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtextventas2KeyReleased
 try {
            
            
            filtrarVenta2(jtextventas2.getText());
        String maincra = jtextventas2.getText();
        BigInteger bisno = new BigInteger(maincra);
            mostrarVentaScanner1(bisno);
        
        JTTotal2.setText(Double.toString((double) calcularTotalDos()));
        
        } catch (Exception e) {
        }
             limpiarCajas();


        // TODO add your handling code here:
    }//GEN-LAST:event_jtextventas2KeyReleased

    private void JcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcodigoActionPerformed

    private void ganarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ganarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ganarActionPerformed

    private void gananciasDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gananciasDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gananciasDiaActionPerformed

    private void sumaDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumaDeVentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumaDeVentasActionPerformed

    private void btnganarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnganarActionPerformed

       ventasDeldia();
        gananciasDia.setText(Double.toString((double) calcularTotalGanancias()));
    }//GEN-LAST:event_btnganarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed

    try {
        reiniciarGanancias();        // TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(PuntoAras.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btneliminarActionPerformed

    private void jTEXTbusquedaTab2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEXTbusquedaTab2KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaTab2KeyPressed

    private void jTEXTbusquedaTab2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTEXTbusquedaTab2KeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_jTEXTbusquedaTab2KeyTyped
public double calcularTotal(){
double contar=Jaras.getRowCount();

    double calcularTotal=0;
for(int i=0; i<contar;i++){
calcularTotal=calcularTotal+Double.parseDouble(Jaras.getValueAt(i, 7).toString());

}
return calcularTotal;
}

public double calcularTotalUno(){
double contar=JarasTab2.getRowCount();

    double calcularTotal=0;
for(int i=0; i<contar;i++){
calcularTotal=calcularTotal+Double.parseDouble(JarasTab2.getValueAt(i, 7).toString());

}
return calcularTotal;
}
public double calcularTotalDos(){
double contar=JarasTab3.getRowCount();

    double calcularTotal=0;
for(int i=0; i<contar;i++){
calcularTotal=calcularTotal+Double.parseDouble(JarasTab3.getValueAt(i, 7).toString());

}
return calcularTotal;
}

public double calcularTotalVentasdeldia(){
double contar=informes.getRowCount();

    double calcularTotal=0;
for(int i=0; i<contar;i++){
calcularTotal=calcularTotal+Double.parseDouble(informes.getValueAt(i, 3).toString());

}
return calcularTotal;
}

public double calcularTotalGanancias(){
double contar=informes.getRowCount();

    double calcularTotales=0;
for(int i=0; i<contar;i++){
calcularTotales=calcularTotales+Double.parseDouble(informes.getValueAt(i, 4).toString());

}
return calcularTotales;
}



 public void EliminarRow(){
        int contador=0;
         contador=Jaras.getSelectedRow();
        mida.removeRow(contador);
    }
 
 
 public void EliminarRowUno(){
        int contador=0;
         contador=JarasTab2.getSelectedRow();
        midas.removeRow(contador);
    }
 public void EliminarRowDos(){
        int contador=0;
         contador=JarasTab3.getSelectedRow();
        midas1.removeRow(contador);
    }
 
 public void ProcedimientoAlmacenado() throws SQLException{
double contar=JarasTab2.getRowCount();
     System.out.println(JarasTab2.getRowCount());
    double calcularTotal=0;
for(int i=0; i<contar;i++){
//    String sql1="call ventaProcedimiento("+JarasTab2.getValueAt(i,0).toString()+")";

    String sql1="call ventaProcedimiento("+JarasTab2.getValueAt(i,0).toString()+","+JarasTab2.getValueAt(i,6).toString()+","+JarasTab2.getValueAt(i,7).toString()+")";
     Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);

}

}
  public void reiniciarGanancias() throws SQLException{

    String sql1="delete from ventas";
            PreparedStatement st=con.prepareStatement(sql1);
            st.execute();
         



}
public void ProcedimientoAlmacenado1() throws SQLException{
double contar=JarasTab3.getRowCount();

    double calcularTotal=0;
for(int i=0; i<contar;i++){
//    String sql1="call ventaProcedimiento("+JarasTab2.getValueAt(i,0).toString()+")";

    String sql1="call ventaProcedimiento("+JarasTab3.getValueAt(i,0).toString()+","+JarasTab3.getValueAt(i,6).toString()+","+JarasTab3.getValueAt(i,7).toString()+")";
     Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);

}

}
 
    
    public void mostrarVenta(String valor){
    String [] registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"nomprependejo", "tama単o","presentacion","precio","putocantidad", "Id"};
    
    int filaseleccionada=jTableAras.getSelectedRow();
//     String hola = (String) jTableAras.getValueAt(filaseleccionada,5);
    String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+valor+") as preciofinal from productos where Id_Pro="+jTableAras.getValueAt(filaseleccionada,5);
     
//    String sql2="select * from productos where Tnombreproduct like'%"+jTableAras.getValueAt(filaseleccionada,0)+"%'";
    
 
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                
            registros[0]=rs.getString("Tnombreproduct");
            registros[1]=rs.getString("tamanio");
            registros[2]=rs.getString("presentacion");
            registros[3]=rs.getString("precio");
            registros[4]=rs.getString("cantidad");
            registros[5]=rs.getString("Id_Pro");
            registros[6]=(String) tab1canti.getSelectedItem();
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;

//preciounitario=Integer.parseInt(registros[3]);
//sumadeproductos=(int) tab1canti.getSelectedItem();
//total=sumadeproductos*preciounitario;
//registros[7]= Integer.toString(total);


//JOptionPane.showMessageDialog(null, total);


             mida.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
        
//            modelin.addRow(registros);
////            modelin.insertRow(0, registros);
//            modelin.insertRow(1, registros);
//            modelin.insertRow(2, registros);
//            modelin.insertRow(3, registros);
            }
            
         Jaras.setModel(mida);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
      public void mostrarVentaDos(String valor){
    String [] registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"Id","nompre", "tama単o","presentacion","precio","cantidad"};
    
    int filaseleccionada=jTableArasTab3.getSelectedRow();

String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+valor+") as preciofinal from productos where Id_Pro="+jTableArasTab3.getValueAt(filaseleccionada,0);
   //  String sql1="select Tnombreproduct, tamanio, presentacion,precio,("+valor+")as cantida, (precio*"+valor+") as preciofinal from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada,0);;
     

 
       try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                 registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
           
            registros[6]=(String) tab2canti1.getSelectedItem();
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;



             midas1.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
        

            }
            
         JarasTab3.setModel(midas1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
         public void mostrarVentaUno(String valor){
    String [] registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"Id","nompre", "tama単o","presentacion","precio","cantidad"};
    
    int filaseleccionada=jTableArasTab2.getSelectedRow();

String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+valor+") as preciofinal from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada,0);
   //  String sql1="select Tnombreproduct, tamanio, presentacion,precio,("+valor+")as cantida, (precio*"+valor+") as preciofinal from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada,0);;
     

 
       try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                 registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
           
            registros[6]=(String) tab2canti.getSelectedItem();
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;



             midas.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
        

            }
            
         JarasTab2.setModel(midas);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
       public void mostrarVentaScanner(BigInteger valor){
   


                
               try {
            

int resultado=0;
 String [] registros = null;
for(int i =0;i<JarasTab2.getRowCount();i++){

    if(JarasTab2.getRowCount()>0){
    BigInteger lunr=new BigInteger(JarasTab2.getValueAt(i, 0).toString());
BigInteger superior=lunr;

resultado=valor.compareTo(lunr);
        System.out.println(resultado);
        System.out.println(JarasTab2.getValueAt(i, 0));
        
}else {
    System.out.println("esta vacia la tabla");
}
}
if(resultado!=0 || JarasTab2.getRowCount()==0){
//if(resultado!=0 ){
    
    
    
      registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"Id","nompre", "tama単o","presentacion","precio","cantidad"};
    
    int filaseleccionada=jTableArasTab2.getSelectedRow();
//     String hola = (String) jTableAras.getValueAt(filaseleccionada,5);
    String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+tab2canti.getSelectedItem()+") as preciofinal from productos where Id_Pro="+valor+"";
     
//    String sql2="select * from productos where Tnombreproduct like'%"+jTableAras.getValueAt(filaseleccionada,0)+"%'";
BigInteger numRpe= valor;    
              Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                 registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
            String inicializador="1";
            registros[6]= (String)tab2canti.getSelectedItem();
            
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;
//                 midas.setValueAt
 midas.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
jTEXTbusquedaTab2.setText("");
 System.out.println("no son iguales igualies");
   
      }
   
    System.out.println("//////////////////");
//}else if(resultado==0 && JarasTab2.getRowCount()>1){
}else if(resultado==0){
      System.out.println("son iguales");
                System.out.println("vammos con la frase ya existe");
                System.out.println("///////////////////////////////");
////                 midas.setValueAt(JarasTab2.getRowCount(), JarasTab2.getRowCount()-1, 6);



String canti=  JarasTab2.getValueAt(JarasTab2.getRowCount()-1, 6).toString();
String base=  JarasTab2.getValueAt(JarasTab2.getRowCount()-1, 4).toString();
String totalPrecio=  JarasTab2.getValueAt(JarasTab2.getRowCount()-1, 7).toString();
int cantidad = Integer.parseInt(canti);
double base1 = Double.valueOf(base);
double preciofinal = Double.valueOf(totalPrecio);
//int luis = registros[7];

//canti++;
//                 midas.setValueAt(tab2canti.getSelectedItem(), i, 6);
                 midas.setValueAt(cantidad+1, JarasTab2.getRowCount()-1, 6);
                 midas.setValueAt(preciofinal+base1,JarasTab2.getRowCount()-1, 7);
   jTEXTbusquedaTab2.setText("");
}
    
//    
//    midas1
//jtextventas2
//        JarasTab3
//    
//    
//    






//        jTEXTbusquedaTab2.setText("");

            
            
            
            
         JarasTab2.setModel(midas);
            
            } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
            
        }
               
     
                
//            
//            }
//            }
    
 
       
    
    }
    
     public void mostrarVentaScanner1(BigInteger valors){
 
               try {
            

int resultado=0;
 String [] registros = null;
for(int i =0;i<JarasTab3.getRowCount();i++){

    if(JarasTab3.getRowCount()>0){
    BigInteger lunr=new BigInteger(JarasTab3.getValueAt(i, 0).toString());
BigInteger superior=lunr;

resultado=valors.compareTo(lunr);
        System.out.println(resultado);
        System.out.println(JarasTab3.getValueAt(i, 0));
        
}else {
    System.out.println("esta vacia la tabla");
}
}
if(resultado!=0 || JarasTab3.getRowCount()==0){
//if(resultado!=0 ){
    
    
    
      registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"Id","nompre", "tama単o","presentacion","precio","cantidad"};
    
//    int filaseleccionada=jTableAr.getSelectedRow();
//     String hola = (String) jTableAras.getValueAt(filaseleccionada,5);
    String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+tab2canti1.getSelectedItem()+") as preciofinal from productos where Id_Pro="+valors+"";
     
//    String sql2="select * from productos where Tnombreproduct like'%"+jTableAras.getValueAt(filaseleccionada,0)+"%'";
BigInteger numRpe= valors;    
              Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                 registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
            String inicializador="1";
            registros[6]= (String)tab2canti1.getSelectedItem();
            
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;
//                 midas.setValueAt
 midas1.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
jtextventas2.setText("");
 System.out.println("no son iguales igualies");
   
      }
   
    System.out.println("//////////////////");
//}else if(resultado==0 && JarasTab2.getRowCount()>1){
}else if(resultado==0){
      System.out.println("son iguales");
                System.out.println("vammos con la frase ya existe");
                System.out.println("///////////////////////////////");
////                 midas.setValueAt(JarasTab2.getRowCount(), JarasTab2.getRowCount()-1, 6);



String canti=  JarasTab3.getValueAt(JarasTab3.getRowCount()-1, 6).toString();
String base=  JarasTab3.getValueAt(JarasTab3.getRowCount()-1, 4).toString();
String totalPrecio=  JarasTab3.getValueAt(JarasTab3.getRowCount()-1, 7).toString();
int cantidad = Integer.parseInt(canti);
double base1 = Double.valueOf(base);
double preciofinal = Double.valueOf(totalPrecio);
//int luis = registros[7];

//canti++;
//                 midas.setValueAt(tab2canti.getSelectedItem(), i, 6);
                 midas1.setValueAt(cantidad+1, JarasTab3.getRowCount()-1, 6);
                 midas1.setValueAt(preciofinal+base1,JarasTab3.getRowCount()-1, 7);
  jtextventas2.setText("");
}
    
//    
//    midas1
//jtextventas2
//        JarasTab3
//    
//    
//    






//        jTEXTbusquedaTab2.setText("");

            
            
            
            
         JarasTab3.setModel(midas1);
            
            } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
            
        }
               
     
                
//            
//            }
//            }
    
 
       
       
    }
    
    
    
    
    public void mostrarScanner(){
    String [] registros= new String[9];
    String [] filas= new String[6];
    String [] columnas= {"Id","nompre", "tama単o","presentacion","precio","cantidad"};
    
    int filaseleccionada=jTableArasTab2.getSelectedRow();
//     String hola = (String) jTableAras.getValueAt(filaseleccionada,5);
    String sql1="select Tnombreproduct, tamanio, presentacion,precio,cantidad,Id_Pro,(precio*"+1+") as preciofinal from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada,0);
     
//    String sql2="select * from productos where Tnombreproduct like'%"+jTableAras.getValueAt(filaseleccionada,0)+"%'";
    
 
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql1);
            while(rs.next()){
                 registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
           String inicializador="1";
            registros[6]= inicializador;
            registros[7]=rs.getString("preciofinal");
String sumadeproductos;

String total;

//preciounitario=Integer.parseInt(registros[3]);
//sumadeproductos=(int) tab1canti.getSelectedItem();
//total=sumadeproductos*preciounitario;
//registros[7]= Integer.toString(total);


//JOptionPane.showMessageDialog(null, total);


             midas.addRow(new Object[] {registros[0],registros[1],registros[2],registros[3],registros[4],registros[5],registros[6],registros[7]});
        
//            modelin.addRow(registros);
////            modelin.insertRow(0, registros);
//            modelin.insertRow(1, registros);
//            modelin.insertRow(2, registros);
//            modelin.insertRow(3, registros);
            }
            
         JarasTab2.setModel(midas);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    
    public void MostrarDatos(){
    String [] registros= new String[6];
    String [] columnas= {"nombre", "tama単o","presentacion","precio","cantidad", "Id"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select * from productos";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Tnombreproduct");
            registros[1]=rs.getString("tamanio");
            registros[2]=rs.getString("presentacion");
            registros[3]=rs.getString("precio");
            registros[4]=rs.getString("cantidad");
            registros[5]=rs.getString("Id_Pro");
            
            
            
            modelon.addRow(registros);
            }
            
         jTableAras.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    public void eliminar(){
        DefaultTableModel tb = (DefaultTableModel) JarasTab2.getModel();
        int a = JarasTab2.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
        //cargaTicket();
    }
    
    public void eliminars(){
        DefaultTableModel tb = (DefaultTableModel) JarasTab3.getModel();
        int a = JarasTab3.getRowCount()-1;
        for (int i = a; i >= 0; i--) {           
        tb.removeRow(tb.getRowCount()-1);
        } 
        //cargaTicket();
    }
    
    
    
    public void limpiarFormulario(Component[] componentes) {
 
    for (int i = 0; i < componentes.length; i++) {
        if (componentes[i] instanceof JPanel) {
            limpiarFormulario(((JPanel) componentes[i]).getComponents());
        } else if (componentes[i] instanceof JViewport) {
            limpiarFormulario(((JViewport) componentes[i]).getComponents());
        } else if (componentes[i] instanceof JScrollPane) {
            limpiarFormulario(((JScrollPane) componentes[i]).getComponents());
        } else if (componentes[i] instanceof JTextField) {
            ((JTextField) componentes[i]).setText("");
        } else if (componentes[i] instanceof JTextArea) {
            ((JTextArea) componentes[i]).setText("");
        } else if (componentes[i] instanceof JPasswordField) {
            ((JPasswordField) componentes[i]).setText("");
        } else if (componentes[i] instanceof JCheckBox) {
            ((JCheckBox) componentes[i]).setSelected(false);
        } else if (componentes[i] instanceof JRadioButton) {
            ((JRadioButton) componentes[i]).setSelected(false);
        } else if (componentes[i] instanceof JToggleButton) {
            ((JToggleButton) componentes[i]).setSelected(false);
        } else if (componentes[i] instanceof JComboBox) {
            ((JComboBox) componentes[i]).setSelectedIndex(0);
        } else if (componentes[i] instanceof JSlider) {
            ((JSlider) componentes[i]).setValue(((JSlider) componentes[i]).getMinimum());
        } else if (componentes[i] instanceof JSpinner) {
            ((JSpinner) componentes[i]).setValue(0);
        } else if (componentes[i] instanceof JFormattedTextField) {
            ((JFormattedTextField) componentes[i]).setText("");
        } else if (componentes[i] instanceof JTable) {
            ((DefaultTableModel) (((JTable) componentes[i]).getModel())).setRowCount(0);
        }
    }
 
}
    
    public void limpiarCajas(){
    jnombre.setText("");
    jpresentacion1.setText("");
    jtamanio.setText("");
    jprecio.setText("");
    jCanti.setSelectedItem(null);
    
    }
    
    
    
    public void InsertDatos(){
        try {
            String sqql="INSERT INTO `productos` (`Tnombreproduct`, `tamanio`, `presentacion`, `precio`, `cantidad`,`Id_Pro`,`ganancias`) VALUES (?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(sqql);
            
            pst.setString(1, jnombre.getText());  
            pst.setString(2, jtamanio.getText());  
            pst.setString(3, jpresentacion1.getText());  
            pst.setString(4, jprecio.getText());  
           
          int comob=0;
          comob=comob+Integer.parseInt((String) jCanti.getSelectedItem());
          pst.setInt(5, Integer.parseInt(jCanti.getItemAt(comob)));
             pst.setString(6, Jcodigo.getText());  
             

            if(ganar.getText().equals("")){
            pst.setString(7, null);  
            }else if(ganar.getText()!=null){
                            
                           pst.setString(7, ganar.getText());
            }
              pst.execute();
            JOptionPane.showMessageDialog(null, "registro exitoso");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error en el regsitro"+e.getMessage());
        }
    
    }
    
    public void EliminarDtos(){
    int filaseleccionada=jTableAras.getSelectedRow();
        try {
            String sqll="delete from productos where Id_Pro="+jTableAras.getValueAt(filaseleccionada, 0);
            Statement sc=con.createStatement();
           int n=sc.executeUpdate(sqll);
           
           
            JOptionPane.showMessageDialog(null, "registro eliminado");
        
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al eliminar"+e.getMessage());
        }
    
    }
    
    
    
    
    public void sumaTotal(){
     String [] registros= new String[6];
    String [] columnas= {"total"};
    DefaultTableModel modelin= new DefaultTableModel(null, columnas);
    String sql2="select sum(precio) as total from productos";
    try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
//            registros[0]=rs.getString("Tnombreproduct");
//            registros[1]=rs.getString("tamanio");
//            registros[2]=rs.getString("presentacion");
//            registros[3]=rs.getString("precio");
//            registros[4]=rs.getString("cantidad");
            registros[0]=rs.getString("total");
            
             JTTotal.setText(registros[0]=rs.getString("total"));
            
//            modelin.addRow(registros);
            }
//            JTTotal.setText(registros[0]=rs.getString("total"));
//         Jaras.setModel(modelin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    }
    
     public void sumaTotalUno(){
     String [] registros= new String[6];
    String [] columnas= {"total"};
    DefaultTableModel modelin= new DefaultTableModel(null, columnas);
    String sql2="select sum(precio) as total from productos";
    try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
//            registros[0]=rs.getString("Tnombreproduct");
//            registros[1]=rs.getString("tamanio");
//            registros[2]=rs.getString("presentacion");
//            registros[3]=rs.getString("precio");
//            registros[4]=rs.getString("cantidad");
            registros[0]=rs.getString("total");
            
             JTTotal1.setText(registros[0]=rs.getString("total"));
            
//            modelin.addRow(registros);
            }
//            JTTotal.setText(registros[0]=rs.getString("total"));
//         Jaras.setModel(modelin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    }
    
    
    public void filtrarDtos(String valor){
        
        
    String [] registros= new String[7];
    String [] columnas= {"Id_Pro","nompre", "tama単o","presentacion","precio","Stock","ganancias"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select * from productos where Tnombreproduct like '%"+valor+"%'";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
            registros[6]=rs.getString("ganancias");
            
            
            
            
            modelon.addRow(registros);
            
            }
            
         jTableAras.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    
    
    public void ventasDeldia(){
        
        
    String [] registros= new String[7];
    String [] columnas= {"Tnombreproduct","id_factura","Vcantidad","ventatotal","ganancias"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select productos.Tnombreproduct, ventas.id_factura, ventas.Vcantidad, ventas.ventaTotal, ventas.ganancias from productos inner join ventas on ventas.id_producto=productos.Id_Pro order by ventas.id_factura asc";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Tnombreproduct");
          
            registros[1]=rs.getString("id_factura");
            registros[2]=rs.getString("Vcantidad");
            registros[3]=rs.getString("ventatotal");
            registros[4]=rs.getString("ganancias");
          
            
            
            modelon.addRow(registros);
            
            }
            
         informes.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }

    public void inventario(){
        
        
    String [] registros= new String[6];
    String [] columnas= {"Tnombreproduct","tamanio","presentacion","precio","cntidad","id"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="SELECT * from productos ORDER by cantidad asc";
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Tnombreproduct");
          
            registros[1]=rs.getString("tamanio");
            registros[2]=rs.getString("presentacion");
            registros[3]=rs.getString("precio");
            registros[4]=rs.getString("cantidad");
            registros[5]=rs.getString("Id_Pro");
          
            
            
            modelon.addRow(registros);
            
            }
            
         informes.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    
    
     public void anadirVenta(){
         int filaseleccionada=jTableAras.getSelectedRow();
        int valor =0;
//        valor= Integer.parseInt(cantidadDeProdcutos.getSelectedItem());
        tab2canti.getItemAt(valor);
    String [] registros= new String[6];
    String [] columnas= {"nompre", "tama単o","presentacion","precio","canit","preciototal","Id"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select  Tnombreproduct, tamanio, presentacion, precio, (precio*"+valor+") as precioFinal, Id_Pro from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada, 4) ;
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Tnombreproduct");
            registros[1]=rs.getString("tamanio");
            registros[2]=rs.getString("presentacion");
            registros[3]=rs.getString("precio");
     
            
            registros[4]=rs.getString("precioFinal");
            registros[5]=rs.getString("Id_Pro");
//            registros[5]=rs.getString("preciofinal");
            
//            registros[5]=rs.getString("cantidad");
          
            
            
            modelon.addRow(registros);
            
            }
            
         JarasTab2.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
     public void PruebaDeVenta(BigInteger valor){
         int filaseleccionada=jTableAras.getSelectedRow();
//        int valor =(int) cantidadDeProdcutos.getSelectedItem();
//           cantidadDeProdcutos.getItemAt(valor);
           
        
    String [] registros= new String[6];
    String [] columnas= {"nompre", "tama単o","presentacion","precio","preciototal","Id"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select  Tnombreproduct, tamanio, presentacion, precio, (precio*"+valor+") as precioFinal, Id_Pro from productos where Id_Pro="+jTableArasTab2.getValueAt(filaseleccionada, 5) ;
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
            registros[0]=rs.getString("Tnombreproduct");
            registros[1]=rs.getString("tamanio");
            registros[2]=rs.getString("presentacion");
            registros[3]=rs.getString("precio");
           registros[4]=rs.getString("precioFinal");
            registros[5]=rs.getString("Id_Pro");
//            registros[5]=rs.getString("preciofinal");
            
//            registros[5]=rs.getString("cantidad");
          
            
            
            modelon.addRow(registros);
            
            }
            
         JarasTab2.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    public void filtrarVenta(String valor){
        
        
    String [] registros= new String[6];
    String [] columnas= {"id","nompre", "tama単o","presentacion","precio","stock"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select * from productos where Tnombreproduct like '%"+valor+"%'";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
                   registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
         
            
           
            
            
            
            modelon.addRow(registros);
            
            }
            
         jTableArasTab2.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    public void filtrarVenta2(String valor){
        
        
    String [] registros= new String[6];
    String [] columnas= {"id","nompre", "tama単o","presentacion","precio","stock"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
    String sql2="select * from productos where Tnombreproduct like '%"+valor+"%'";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
                   registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
         
            
           
            
            
            
            modelon.addRow(registros);
            
            }
            
         jTableArasTab3.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    public void ScanerTelefono(int valor){
        
        
    String [] registros= new String[6];
    String [] columnas= {"id","nompre", "tama単o","presentacion","precio","stock"};
    
    DefaultTableModel modelon= new DefaultTableModel(null, columnas);
    
     String sql2="select * from productos where Id_Pro like '%"+valor+"%'";
    
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql2);
            while(rs.next()){
                   registros[0]=rs.getString("Id_Pro");
            registros[1]=rs.getString("Tnombreproduct");
            registros[2]=rs.getString("tamanio");
            registros[3]=rs.getString("presentacion");
            registros[4]=rs.getString("precio");
            registros[5]=rs.getString("cantidad");
         
            
           
            
            
            
            modelon.addRow(registros);
            
            }
            
         jTableArasTab2.setModel(modelon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error al obtener datos"+e.getMessage());
        }
    
    
    }
    
    
    
    
    
    
     public void ActualizarDatos(){
        try {
            String sqql="update `productos` SET Tnombreproduct=?, tamanio=?, presentacion=?, precio=?, cantidad=? , ganancias=? WHERE Id_Pro=?";
            int filasec=jTableAras.getSelectedRow();
            String bogas = (String)jTableAras.getValueAt(filasec,0);
            PreparedStatement pst = con.prepareStatement(sqql);
            pst.setString(1, jnombre.getText());  
            pst.setString(2, jtamanio.getText());  
            pst.setString(3, jpresentacion1.getText());  
            pst.setString(4, jprecio.getText());
          
          
          int comob=0;
          comob=comob+Integer.parseInt((String) jCanti.getSelectedItem());
          pst.setInt(5, Integer.parseInt(jCanti.getItemAt(comob)));
          
          if(ganar.getText().equals("")){
            pst.setString(6, null);  
            }else if(ganar.getText()!=null){
                            
                           pst.setString(6, ganar.getText());
            }
           //  pst.setString(6, ganar.getText());
             
             
            pst.setString(7,bogas);
            
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "registro modificado");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error en el modificado"+e.getMessage());
        }
    
    }
     
     
     
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PuntoAras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PuntoAras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PuntoAras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PuntoAras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PuntoAras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnQuitar;
    private javax.swing.JTextField JTTotal;
    private javax.swing.JTextField JTTotal1;
    private javax.swing.JTextField JTTotal2;
    private javax.swing.JTable Jaras;
    private javax.swing.JTable JarasTab2;
    private javax.swing.JTable JarasTab3;
    private javax.swing.JTextField Jcodigo;
    private java.awt.Label VENTAS;
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btna単adir;
    private javax.swing.JButton btna単adir1;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnganar;
    private javax.swing.JButton btnvender;
    private javax.swing.JTextField gananciasDia;
    private javax.swing.JTextField ganar;
    private javax.swing.JTable informes;
    private javax.swing.JButton inventario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jCanti;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTEXTbusqueda;
    private javax.swing.JTextField jTEXTbusquedaTab2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAras;
    private javax.swing.JTable jTableArasTab2;
    private javax.swing.JTable jTableArasTab3;
    private javax.swing.JTextField jnombre;
    private javax.swing.JTextField jprecio;
    private javax.swing.JTextField jpresentacion1;
    private javax.swing.JTextField jtamanio;
    private javax.swing.JTextField jtextventas2;
    private javax.swing.JTextField sumaDeVentas;
    private javax.swing.JComboBox<String> tab1canti;
    private javax.swing.JButton tab2Quitar;
    private javax.swing.JButton tab2Quitar1;
    private javax.swing.JButton tab2Vender;
    private javax.swing.JButton tab2Vender1;
    private javax.swing.JComboBox<String> tab2canti;
    private javax.swing.JComboBox<String> tab2canti1;
    private javax.swing.JButton tab2imprimir;
    private javax.swing.JButton tab2imprimir1;
    private javax.swing.JButton ventasDia;
    // End of variables declaration//GEN-END:variables
}
